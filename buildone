#!/bin/bash

set -e
set -u
set -o pipefail

BASENAME=Shardbyte/shard-minideb

mkdir -p build

log() {
    echo "$@" >&2
}

build() {
    DIST=$1
    PLATFORM=${2:-amd64}
    TAG=$DIST-$PLATFORM

    [ -f "debootstrap/$DIST" ] || (echo "buildall: Unknown distribution: $DIST" && exit 1)
    current_ts="$(date -u +%Y-%m-%dT%H:%M:%S.%NZ)"
    if docker pull "$BASENAME:$TAG" > /dev/null; then
        target_ts="$(docker inspect "$BASENAME:$TAG" | jq --raw-output ".[0].Created")"
        pulled_image_id="$(docker inspect "$BASENAME:$TAG" | jq --raw-output ".[0].Id")"
    else
        target_ts="$current_ts"
        pulled_image_id=
    fi
    log "============================================"
    log "Building $BASENAME:$TAG"
    log "============================================"
    ./mkimage "build/$TAG.tar" "$DIST" "$PLATFORM"
    built_image_id=$(./import "build/$TAG.tar" "$target_ts" "$PLATFORM")
    log "============================================"
    log "Running tests for $BASENAME:$TAG"
    log "============================================"
    ./test "$built_image_id" "$TAG" "$PLATFORM"
    log "============================================"
    log "Rebuilding $BASENAME:$TAG to test reproducibility"
    log "============================================"
    ./mkimage "build/${TAG}-repro.tar" "$DIST" "$PLATFORM"
    repro_image_id=$(./import "build/${TAG}-repro.tar" "$target_ts" "$PLATFORM")
    if [ "$repro_image_id" != "$built_image_id" ]; then
        log "$BASENAME:$TAG differs after a rebuild. Examine $built_image_id and $repro_image_id"
        log "to find the differences and fix the build to be reproducible again."
        log "Changes (- first build, + second build):"
        ./dockerdiff "$built_image_id" "$repro_image_id" || true
        exit 1
    fi
    rm "build/${TAG}-repro.tar"
    if [ -n "$pulled_image_id" ]; then
        if [ "$built_image_id" != "$pulled_image_id" ]; then
            log "Image changed $built_image_id (new) != $pulled_image_id (old)"
            log "Changes (- old, + new):"
            ./dockerdiff "$pulled_image_id" "$built_image_id" || true
            # Re-import with the current timestamp so that the image shows
            # as new
            built_image_id="$(./import "build/$TAG.tar" "$current_ts" "$PLATFORM")"
        else
            log "Image didn't change"
            return
        fi
    fi
    docker tag "$built_image_id" "$BASENAME:$TAG"
    log "Tagged $built_image_id as $BASENAME:$TAG"
}

if [ -z "$1" ]; then
    echo "You must specify the dist to build"
    exit 1
fi

build "$@"
